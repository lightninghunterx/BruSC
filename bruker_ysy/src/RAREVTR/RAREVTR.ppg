;==============================================================
;=
;= $Source$
;=
;= A RARE imaging experiment with variable repetition time
;=
;= $Id$
;==============================================================


#include <MRI.include>
#include <PrepModulesHead.mod>

define delay denab
"denab = d3 - de"

define delay d5m40u
"d5m40u = d5 - 40u"

INIT_DEVICES

#define r2d ACQ_spatial_phase_1
#define r3d ACQ_spatial_phase_2

grad_zero_for_gs <r2d, r3d>

; dummy scans needed before each new MultRepTime element
; otherwise ghosting may happen
; acqmode loopcounter used as boolean:
; acqmode=1: receive mode,  acqmode=0: dummy scans 
define loopcounter acqmode
"acqmode = 1"
; define dummy scan counter lds
define loopcounter lds
; initialize to l1=PVM_DummyScans
"lds=l1"

; transmitter and receiver frequencies
define list<frequency> freqTx = {$ACQ_O1_list}
define list<frequency> freqRx = {$ACQ_O1B_list}

define list<delay> vardel = {$ACQ_vd_list}

;----------------------- preparation modules -----------------------
              subr FlowSatInit()
              subr SatTransInit()
start,   0u        r2d.store

acc,     0u

  if "lds>0" 
  {             
                  "acqmode = 0"
  }
  else
  {
                  "acqmode = 1"
  }

              subr TriggerPhase()

slice,             UPDATE_DYN_PARS_30u
        10u        freqRx(receive):f1

;----------------------- preparation modules -----------------------
              subr TriggerSlice()
              subr FlowSat()
              subr FovSat()
              subr SatTrans()
              subr FatSup()

;---------------------------- excitation --------------------------
         d9        grad_ramp{g1, 0, g1}                 ;TR spoiler
         d3        grad_ramp{ 0, 0, g0}  freqTx:f1        ;slice on

        (p0:sp0    ph0):f1                               ;exc pulse

         d2        grad_ramp{g2, 0, g7}                  ;read deph
         d1        grad_off                              ;TE-fill 1

;--------------------------- refocusing ----------------------------
echo1,   0u        r2d.restore

echo,    d3        grad_ramp{0, 0, g0}                     ;slice on

        (p1:sp1    ph1):f1                                 ;pi-pulse

         d5        grad_ramp{g8, r2d*g4, g3-r3d*g6}  ;enc+slice-reph
         d6        grad_off                              ;TE-fill 2a

      denab        grad_ramp{g5, 0, 0}                ;read-on + acq

  if "acqmode == 1"
  {
                   ADC_INIT_(job0, ph0, ph1)
   AQ_(job0)       ADC_START_(job0)
  }
  else
  {
         de
   AQ_(job0)
  }

         d6        grad_off                                ;TE-fill 2b
     d5m40u        grad_ramp{g8,-r2d*g4, g3+r3d*g6}   ;enc+slice-reph2

  if "acqmode == 1"
  {
        40u        ADC_END_(job0)
         0u        r2d.inc
  }
  else
  {
        40u
  }

     lo to echo  times PVM_RareFactor

     lo to echo1 times PVM_NEchoImages

;----------------------------- flipback ----------------------------
  if( PVM_FlipBackOnOff == On)
  {
         d3        grad_ramp{0, 0, g0}                      ;slice on

        (p1:sp1    ph1):f1                                  ;pi-pulse

         d1        grad_off
         d2        grad_ramp{g2, 0, 0}                  ;read-dephase
         d3        grad_ramp{0, 0, g0}                      ;slice on

        (p0:sp0    ph3):f1                                  ;flipback
  }

         d3        grad_off

;---------------------------- slice loop ---------------------------
         0u        grad_matrix.inc
         0u        freqTx.inc
         0u        freqRx.inc

     vardel
              subr FlowSatInc()

     lo to slice times NSLICES
         0u        ipp0
         0u        ipp3

;--------------------------- dummy loop ----------------------------
                  "lds = lds - 1"
  if "lds>=0"      goto acc


;-------------------------- averaging loop -------------------------
     lo to acc times NA
         0u        rpp0
         0u        rpp3

;----------------------------- 2d loop -----------------------------
     lo to start times l2           ;PVM_EncMatrix[1]/PVM_RareFactor

;----------------------------- 3d-loop -----------------------------
         0u        r3d.inc
     lo to start times l5

;----------------------------- NAE loop ----------------------------
     lo to start times NAE

;--------------------------- T1 Sat loop ---------------------------
         0u        vardel.inc

                  "acqmode = 0"                       ;next TR needs
                  "lds=l1"                           ;new dummyscans

     lo to start times l3                                 ;NumT1Exps

;-------------------------- sattrans loop --------------------------
	      subr SatTransInc()

;------------------------- repetition loop -------------------------
     lo to start times l4                          ;PVM_NRepetitions


SETUP_GOTO(start)
exit

ph0 = 0 2
ph1 = 1
ph3 = 2 0
