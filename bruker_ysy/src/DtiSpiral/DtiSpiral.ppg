;===============================================================
;=
;= $Source$
;=
;= A gradient echo imaging pulse program
;=
;= $Id$
;===============================================================


;===========================================================
;   includes
;===========================================================

#include <MRI.include>
#include <Spiral.mod>
#include <Trajectory.mod>
#include <PrepModulesHead.mod>
#include <DwiHead.mod>


if (PVM_TrajAdjustmentRunning == Yes)
{
            subr trajPerform()
}
else
{
        define delay dGrad  = {$GradWait}
        define delay dFq    = {$FreqSwitch}
        define delay dRise  = {$RiseT}
        define delay dSpoil = {$SliceSpoiler.dur}
        define delay dReph  = {$RephGradDur}
        define delay dTR    = {$TRWait}

        ; convert to s
        "dGrad   = dGrad          * 0.001"
        "dFq     = dFq            * 0.001"
        "dRise   = dRise          * 0.001"
        "dSpoil  = dSpoil         * 0.001"
        "dReph   = dReph          * 0.001"
        "dTR     = dTR            * 0.001"
        define list<frequency> freqTx = {$ACQ_O1_list}
        define list<frequency> freqRx = {$ACQ_O1B_list}

#define r3d ACQ_spatial_phase_2
        grad_zero_for_gs <r3d>

            subr DwiInit()

        INIT_DEVICES
   ;===========================================================
   ;   D/P               spec control          gradients
   ;===========================================================

   ;----------------- preparation -----------------------------

            subr TriggerOutStart()
start,
            subr TriggerPhase()
            subr TriggerOutVolume()
            subr Tagging()
slice,
       dTR
            subr TriggerSlice()
            subr TriggerOutSlice()

   if (GradSync == Yes)
   {
        1u       GRAD_SYNC
   }
            subr FovSat()
            subr FatSup()

       dFq       freqRx(receive):f1
       dFq       freqTx:f1
     dGrad
    dSpoil       grad_ramp{0, 0, SliceSpoiler.ampl}

   ;----------------- excitation ------------------------------

      dRise      grad_ramp{0, 0, SliceGrad}
        (p0:sp0  ph0):f1
      dRise      grad_off
      dReph      grad_ramp{0, 0, -SliceRephGrad + r3d * Phase3dGrad}
      dRise      grad_off
      dGrad

            subr DwiPrep(ph1)


   ;----------------- acquisition -----------------------------

            subr spiralAcq(ph0, ph1)

   ;----------------- phase rewinding -------------------------
   if (PVM_SpatDim == 3)
   {
      dReph      grad_ramp{0, 0, r3d * (-Phase3dGrad)}
      dRise      grad_off
   }

         0u      grad_matrix.inc
         0u      DwFl0.inc
         0u      freqTx.inc
         0u      freqRx.inc

   ;----------------------------------slice loop-----------------------
     lo to slice times NSLICES
         0u      ipp0            grad_matrix.res

   ;----------------------------------averaging loop------------------
     lo to start times NA
         0u      rpp0

   ;----------------------------------spiral loop---------------------
            subr spiralLoop(start)

   ;----------------------------------3d loop-----------------------
                 r3d.inc
     lo to start times l2

   ;----------------------------------NAE loop-----------------------
     lo to start times NAE

   ;----------------------------------diffusion loop-------------------
            subr DwiLoop(start)

   ;----------------------------------NR loop-----------------------
     lo to start times PVM_NRepetitions

SETUP_GOTO(start)

exit
}

ph0 = 0 2
ph1 = 1
