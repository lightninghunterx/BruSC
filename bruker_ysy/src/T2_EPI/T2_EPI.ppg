;****************************************************************
;
; Copyright (c) 2001 - 2003
; Bruker BioSpin MRI GmbH
; D-76275 Ettlingen, Germany
;
; All Rights Reserved
;
; EPI -  echo planar imaging method
;
;****************************************************************
;
; d0 - TR padding
; d1 - refocusing
; d2 - TE padding
; d4 = RiseTime
; d5 = spoiler
; d7 - TE padding (spin echo)
; d10 = SpinEchoTime-PVM_EpiModuleTime
; d11 = (fill delay)
; d12 = (fill delay)

#include <MRI.include>
#include <PrepModulesHead.mod>
#include <epiHead.mod>

define list<frequency> freqTx = {$ACQ_O1_list}
define list<frequency> freqRx = {$ACQ_O1B_list}

;counter of dummy scans (not acquired)
define loopcounter lds = {$PVM_DummyScans}

define loopcounter c_echo
define loopcounter c_echo2 = {$PVM_NEchoImages}


INIT_DEVICES

#define r3d ACQ_spatial_phase_2

if(PVM_EpiAdjustMode==2)
{
        define list <grad_scalar> r3d
}
else
{
        grad_zero_for_gs <r3d>
}

         0u       grad_matrix.res
             subr SatTransInit()
             subr TriggerOutStart()
start,   0u
             subr TriggerPhase()
             subr TriggerOutVolume()
             subr Tagging()

;---------------------- start of the main loop ---------------------
slice,       UPDATE_DYN_PARS_30u
	 5u       freqRx(receive):f1
         5u       freqRx.inc

             subr TriggerSlice()
	     subr EpiGradSync()
             subr TriggerOutSlice()

;----------------------- preparation modules -----------------------
             subr FovSat()
             subr SatTrans()
             subr FatSup()

         d5       grad_ramp{0, 0, g2}

;------------------------ slice selection --------------------------
         d4       grad_ramp{0, 0, g0}       freqTx:f1

         0u       freqTx.inc

        (p0:sp0   ph0):f1

         d4       grad_off

;-------------------------- slice rephase --------------------------
         d1       grad_ramp{0, 0, g1 }
         d4       grad_off

         d7                      ; PVM_SignalType == SignalType_Echo
         d9       grad_ramp{0, 0, g3}
         d4       grad_ramp{0, 0, g0}

        (p1:sp1   ph1):f1

         d9       grad_ramp{0, 0, g3}
         d4       grad_off

;---------------------------- TE padding ---------------------------
         d2

         "c_echo = c_echo2"

;---------------------------- echo loop ----------------------------
nel,    10u

#include <epi.mod>

        if "c_echo < 2" goto goOn

        d11
         d9       grad_ramp{0, 0, g3}
         d4       grad_ramp{0, 0, g0}

        (p1:sp1   ph1):f1

         d9       grad_ramp{0, 0, g3}
         d4       grad_off
        d12

        "c_echo = c_echo - 1"
     goto nel

goOn,   0u

;---------------------------- slice loop ---------------------------
         d0       grad_matrix.inc
     lo to slice times NSLICES

         0u       grad_matrix.res
         d6                                      ;inter-volume delay

;--------------------------- dummy loop ----------------------------
   "lds = lds - 1"
   if "lds >= 0"
   {
         0u       EpiVd.res
      goto slice
   }

;-------------------------- averaging loop -------------------------
         0u       ipp0
     lo to start times NA

;----------------------------- 2d-loop -----------------------------
         0u       rpp0
         0u       Interleaving.inc

;-------------------------- segment loop ---------------------------
     lo to start times PVM_EpiNShots

         0u       Interleaving.res

;----------------------------- 3d-loop -----------------------------
         0u       r3d.inc
     lo to start times l1

;-------------------------- sattrans loop --------------------------
             subr SatTransInc()

;------------------------- repetition loop -------------------------
     lo to start times NR

SETUP_GOTO(start)

exit

ph0 = 0 2
ph1 = 1
