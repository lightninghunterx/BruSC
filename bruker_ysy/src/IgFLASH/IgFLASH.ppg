;****************************************************************
;
; Copyright (c) 2011
; Bruker BioSpin MRI GmbH
; D-76275 Ettlingen, Germany
;
; All Rights Reserved
; 
; IgFLASH - a self-gating gradient echo imaging method
;
;****************************************************************

#include <MRI.include>

define delay denab
"denab =  d3 - de -10u"
define delay d10m
"d10m = d10 - 10u"
define delay d4m
"d4m = d4 -10u"
define delay del1
"del1 = 90u - de"

define list<phase> phaselist = {$RFPhaseList}
define list<frequency> freqTx = {$ACQ_O1_list}
define list<frequency> freqRx = {$ACQ_O1B_list}
define loopcounter dummy = {$PVM_DummyScans}

#include <PrepModulesHead.mod> 
#include <Navigator.mod>

#define r2d ACQ_spatial_phase_1
#define r3d ACQ_spatial_phase_2

grad_zero_for_gs <r2d, r3d>


subroutine TTLOut_Start()
{
  if(PpgTTLOut==Yes)
  {
    1u TTL2_LOW
  }
  else
  {
    1u
  } 
}

subroutine TTLOut_End()
{
  if(PpgTTLOut==Yes)
  {
    1u TTL2_HIGH
  }
  else
  {
    1u
  } 
}

subroutine IgFlash(any acquire)
{
;----------------------------------start of the main loop ----------
slice, 	UPDATE_DYN_PARS_30u
;----------------------------------preparation modules -------------
subr FlowSat()
subr FovSat()
subr SatTrans()
subr FatSup()

        20u    SWITCH_(Navigator)
        20u    switch_realtime_tables 
if(acquire == 1)
{
subr Navigator(sp5,ph0,ph1)
subr TTLOut_Start()
}
else
{
subr NavigatorDummy(sp5,ph0)
        1u
}

        d6	grad_ramp{0, 0, g9}      
;----------------------------------slice selection------------------	
	d3 	grad_ramp{0, 0, g0} freqTx:f1
	(p0:sp0 phaselist):f1
if(PVM_NavPosMode != Nav_in_slice)
{
        10u 	grad_off
        d4m     SWITCH_(job0)
  if(FlowCompYesNo==No)
  {
	d10 	grad_ramp{g2, r2d*g3, g1+r3d*g4}	
	d2 	grad_off
  }
  else
  {
        d10     grad_shape{RShape()*100, P2Shape()*100*r2d, SShape()*100 - P3Shape()*100*r3d} 
  }
}
else
{
	d4 	grad_off
	d14   	grad_ramp{0, 0, g1}   navrec(receive):f1
        d3 	grad_off
   if(acquire == 1)
   {
        ADC_INIT_(Navigator,ph1,phaselist)  ;takes de
        NAVD4   ADC_START_(Navigator)
        del1                            ;delay for scan shift
        10u     ADC_END_(Navigator)
   }
   else
   {
        NAVD4
        100u
   }
	10u	grad_ramp{g2, r2d*g3, r3d*g4}
        d10m    SWITCH_(job0)
	d2      grad_off
     
}
;----------------------------------frequency encoding---------------
if(acquire == 1)
{
        10u     grad_ramp{g5, 0, 0}
        denab   freqRx(receive):f1
        ADC_INIT_(job0,ph1,phaselist)	
        AQ_(job0)  ADC_START_(job0)
}
else
{
        d3      grad_ramp{g5, 0, 0}
        AQ_(job0)

}	
;----------------------------------read spoiler + phase encoding---
        d11     grad_ramp{g6, r2d*g7, r3d*g8} ; 2nd and 3rd dims
	d12     grad_ramp{g6, 0, 0}
	d3	grad_off
if(acquire == 1)
{
subr TTLOut_End()
        d0	ADC_END_(job0)
}
else
{
        1u
        d0
}
if(AngioMode==No)
{

subr FlowSatInc()
	0u grad_matrix.inc  
        0u freqTx.inc
        0u freqRx.inc
	lo to slice times NSLICES

}
;----------------------------------RF Spoiling--------------------
        0u  phaselist.inc
}


subr FlowSatInit()
subr SatTransInit()

INIT_DEVICES
        
start,  0u
;----------------------------start dummy loop --------------------
if "dummy>0"
{
dummyloop, 0u
subr IgFlash(0)       
     lo to dummyloop times dummy
}
;----------------------------end dummy loop ----------------------

segm,   0u r2d.store
over,   0u r2d.restore
echo,   0u
;----------------------------start acquisition--------------------
subr IgFlash(1)

        lo to echo times l12    ; averaging loop

	0u r2d.inc
        lo to echo times l1     ; 2d loop

        lo to over times l10    ; oversampling loop
 
        lo to segm times l11    ; segmentation loop

;----------------------------Angio loop---------------------------
if(AngioMode==Yes)
{
subr FlowSatInc()
	0u grad_matrix.inc  
        0u freqTx.inc
        0u freqRx.inc
	lo to start times NSLICES

}
;--------------------------------3d loop--------------------------
	0u r3d.inc
        "dummy=0"
	lo to start times l2
        subr SatTransInc()
        lo to start times NR
SETUP_GOTO(start)

exit

ph0 = 0
ph1 = 0 
