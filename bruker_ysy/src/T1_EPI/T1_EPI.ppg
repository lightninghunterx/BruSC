;****************************************************************
;
; Copyright (c) 2008
; Bruker BioSpin MRI GmbH
; D-76275 Ettlingen, Germany
;
; All Rights Reserved
;
; T1_EPI -  echo planar imaging method
;
;****************************************************************
;
; d0 - padding for IRspacing (for one slice of SliceGroup)
; d1 - refocusing
; d2 - TE padding
; d4 - RiseTime
; d5 - spoiler
; d6 - TR padding
; d7 - TE padding (spin echo)
; d9 - spoiler
; d10 - (2.0 + IROffset0-MinIROffset0)
; d11 - delay for minimizing TR for given IROffset and IRSpacing

#include <MRI.include>
#include <PrepModulesHead.mod>
#include <epiHead.mod>

define list<frequency> freqTx1 = {$ACQ_O1_list}
define list<frequency> freqTx2 = {$ACQ_O2_list}
define list<frequency> freqRx = {$ACQ_O1B_list}

;counter of dummy scans (not acquired)
define loopcounter lds = {$PVM_DummyScans}
define loopcounter sli = {$Sli_ppg}
define loopcounter rep = {$Rep_ppg}


INIT_DEVICES

#define r3d ACQ_spatial_phase_2

if(PVM_EpiAdjustMode==2)
{
   define list <grad_scalar> r3d
}
else
{
   grad_zero_for_gs <r3d>
}

                  grad_matrix.res

             subr SatTransInit()
             subr TriggerOutStart()

start,   0u
             subr TriggerPhase()

start0,  0u
         d6                                       ;inter-volume delay
             subr Tagging()
             subr TriggerOutVolume()

;-----------------------------inversion -----------------------------
        10u       freqTx2:f1              freqTx2.inc

        (p2:sp2   ph0):f1

        d17       grad_ramp{0,0,g4}                          ;spoiler
         d4       grad_off
        d10

;--------------------- start of the slice loop ---------------------
slice,       UPDATE_DYN_PARS_30u
	 5u       freqRx(receive):f1
         5u       freqRx.inc

             subr TriggerSlice()
	     subr EpiGradSync()
             subr TriggerOutSlice()

;----------------------- preparation modules -----------------------
             subr FovSat()
             subr SatTrans()
             subr FatSup()

        d11
         d5       grad_ramp{0, 0, g2}

;------------------------ slice selection --------------------------
         d4       grad_ramp{0, 0, g0}        freqTx1:f1
         0u       freqTx1.inc

        (p0:sp0   ph0):f1

         d4       grad_off

;-------------------------- slice rephase --------------------------
         d1       grad_ramp{0, 0, g1}
         d4       grad_off

   if (PVM_SignalType == SignalType_Echo)
   {
         d7
         d9       grad_ramp{0, 0, g3}
         d4       grad_ramp{0, 0, g0}

        (p1:sp1   ph1):f1

         d9       grad_ramp{0, 0, g3}
         d4       grad_off
   }

         d2

#include <epi.mod>
    
;---------------------------- slice loop ---------------------------
         d0       grad_matrix.inc
     lo to slice times sli                                 ; NSLICES


;------------------------- repetition loop -------------------------
         0u       grad_matrix.res
     lo to start0 times rep

;--------------------------- dummy loop ----------------------------
   "lds = lds - 1"
   if "lds >= 0"
   {
         0u       EpiVd.res
      goto start
   }

;-------------------------- averaging loop --------------------------
        0u        ipp0
     lo to start times NA

;----------------------------- 2d-loop -----------------------------
        0u        rpp0            
        0u        Interleaving.inc
     lo to start times PVM_EpiNShots

        0u       Interleaving.res

;----------------------------------3d loop--------------------------
        0u       r3d.inc
     lo to start times l1

;-------------------------- sattrans loop --------------------------
     subr SatTransInc()

;------------------------- repetition loop -------------------------
     lo to start times NR

SETUP_GOTO(start)

exit

ph0 = 0 2
ph1 = 0
