;*******************************************************************
;
; Copyright (c) 2020
; Bruker BioSpin MRI GmbH
; D-76275 Ettlingen, Germany
;
; All Rights Reserved
;
; AdjRefPowX - reference power adjustment for x nuclei
;
;*******************************************************************
;
; d0 - TR padding

#include <MRI.include>
#include <PrepModulesHead.mod>
#include <acqdec.mod>

define loopcounter         lds   = {$PVM_DummyScans}; dummy scans

define list<loopcounter> avList  = {$AverageList}
define list<frequency>   freqTx  = {$ACQ_O1_list}
define list<frequency>   freqRx  = {$ACQ_O1B_list}
define list<pulse>       excLen  = {$ExcDurList}
define list<power>       excPow  = {$ExcPowList}
define list<power>       nulPow  = { Watt 0.0 }
define list<delay>         vdel  = {$ACQ_vd_list}

#define slicegrad     grad_ramp<magnet_coord>{SliceGrad[]}
#define slicerephgrad grad_ramp<magnet_coord>{SliceRephGrad[]}

INIT_DEVICES

        0u        excLen.res
        0u        excPow.res
        0u        vdel.res
        0u        rpp0


noise,

   if (NoiseScan == 1)
   {
      vdel
       10u        nulPow:f1
       10u        freqRx(receive):f1
        d4        slicegrad
    excLen:sp0    (currentpower):f1

        d2        grad_off

        d3        slicerephgrad
        d2        grad_off

             subr acqdec(ph1,ph0,AQ_(job0))           ;lasts aqq+20u

        1m        ADC_END_(job0)

    lo to noise times avList
   }
;--------------------- start of the main loop ----------------------

start, 	          UPDATE_DYN_PARS_30u

;----------------------- preparation modules -----------------------


             subr TriggerSlice()
             subr FatSup()
             subr Noe()
             subr WsOvs(ph1, ph1)
             subr FovSat()

      vdel
       10u        excPow:f1
       10u        freqRx(receive):f1

        d4        slicegrad
    excLen:sp0   (currentpower):f1

        d2        grad_off

        d3        slicerephgrad
        d2        grad_off

      vdel

   if "lds>0"
   {
       20u
  AQ_(job0)
        1m
   }
   else
   {
             subr acqdec(ph1,ph0,AQ_(job0))           ;lasts aqq+20u
        1m        ADC_END_(job0)
   }

             subr DriftComp()

        d0

                  "lds =lds - 1"             ;this makes dummy scans
   if "lds>=0" goto start

        0u	  ipp0

;        0u        freqRx.inc
;        0u        SliceGrad.inc
;        0u        SliceRephGrad.inc


    lo to start times avList

        0u        avList.inc
        0u	  rpp0

        0u        excPow.inc
        0u        excLen.inc
        0u        vdel.inc


    lo to start times NI

        0u        avList.inc
        0u	  rpp0

SETUP_GOTO(noise)

exit

ph0  = 0 ;2 1 3
ph1  = 0
