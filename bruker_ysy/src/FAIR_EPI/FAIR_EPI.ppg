;****************************************************************
;
; Copyright (c) 2003
; Bruker BioSpin MRI GmbH
; D-76275 Ettlingen, Germany
;
; All Rights Reserved
;
; FAIR_EPI2 - a gradient echo imaging method
;
;****************************************************************
;
; d0 - TR padding
; d1 - T1 padding
; d2 - T2 padding
; d3 = GradDelayTime
; d4 = RampTime

#include <MRI.include>
#include <epiHead.mod>
#include <PrepModulesHead.mod>
#include <Fair.mod>

define list<frequency> freqTx = {$ACQ_O1_list}
define list<frequency> freqRx = {$ACQ_O1B_list}

define delay drise
define loopcounter lds = {$PVM_DummyScans}


INIT_DEVICES

if( ACQ_dim >= 3)
{

   if(PVM_EpiAdjustMode==2)
   {
       define list <grad_scalar> r3d
   }
   else
   {
       grad_zero_for_gs <r3d>
   }

        0u       r3d.res
}

        0u       grad_matrix.res
            subr SatTransInit()
;-------------------------- inversion prep -------------------------
start,  d0
            subr TriggerPhase()
            subr TriggerSlice()
	    subr EpiGradSync()  
            subr FairPrep(ph0)

;-------------------------- slice package --------------------------
pack,       UPDATE_DYN_PARS_30u
       10u       freqRx(receive):f1

;----------------------- preparation modules -----------------------
            subr FovSat()
            subr SatTrans()
            subr FatSup()

        d5       grad_ramp{0,0,g2}

;------------------------ slice selection --------------------------
        d3       grad_ramp{0,0,g0}      freqTx:f1

       (p0:sp0   ph0):f1

        d3       grad_off

;-------------------------- slice rephase --------------------------
        d3       grad_ramp{0,0,g1}
        d1
        d3       grad_off

   if(PVM_SignalType == SignalType_Echo)                  ;spin echo
   {
        d6
        d5       grad_ramp{0,0,g2}
        d3       grad_ramp{0,0,g0}
       (p1:sp1   ph1):f1
        d5       grad_ramp{0,0,g2}
        d3       grad_off
   }
        d2

#include <epi.mod>

        0u       grad_matrix.inc
        0u       freqRx.inc
        0u       freqTx.inc

;--------------------------- slice loop ----------------------------
     lo to pack times NSLICES
        0u       grad_matrix.res

        subr FairRec()

;-------------------------- averaging loop -------------------------
     lo to start times NA

;--------------------------- dummy loop ----------------------------
   "lds = lds - 1"
   if "lds >= 0"
   {
         0u       EpiVd.res
      goto start
   }

;----------------------------- 2d-loop -----------------------------
        0u       Interleaving.inc                  ;epi segmentation
     lo to start times PVM_EpiNShots

        0u       Interleaving.res

;----------------------------- 3d-loop -----------------------------
   if( ACQ_dim >= 3 )
   {
        0u       r3d.inc
     lo to start times l1
   }

;-------------------------- inverison loop -------------------------
            subr FairInc()

;-------------------------- sattrans loop --------------------------
            subr SatTransInc()

;------------------------- repetition loop -------------------------
     lo to start times NR


SETUP_GOTO(start)

exit

ph0 = 0
ph1 = 0
